# ===================================
# DOCKER COMPOSE - SKILLSWAP PLATFORM
# ===================================
# Run full stack with MongoDB locally
# Usage: docker-compose up -d

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: skillswap-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: changethispassword123
      MONGO_INITDB_DATABASE: skillswap
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - skillswap-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/skillswap --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # SkillSwap Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: skillswap-app
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:changethispassword123@mongodb:27017/skillswap?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRE: 30d
      CLIENT_URL: http://localhost:5000
      # Email configuration (optional)
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_EMAIL: your-email@gmail.com
      SMTP_PASSWORD: your-app-password
      FROM_EMAIL: noreply@skillswap.com
      FROM_NAME: SkillSwap Platform
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - skillswap-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional - for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: skillswap-nginx
  #   restart: unless-stopped
  #   depends_on:
  #     - app
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   networks:
  #     - skillswap-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  skillswap-network:
    driver: bridge
